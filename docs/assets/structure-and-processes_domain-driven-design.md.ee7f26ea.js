import{S as a}from"./chunks/Summary.851e4d1b.js";import{o as i,c as t,D as o,x as e,a as n,N as r}from"./chunks/framework.9289536d.js";const s="/assets/structure-and-processes-domain-driven-design.27e4a11f.jpg",d=e("h1",{id:"domain-driven-design",tabindex:"-1"},[n("Domain Driven Design "),e("a",{class:"header-anchor",href:"#domain-driven-design","aria-label":'Permalink to "Domain Driven Design"'},"​")],-1),l=r('<img class="method-img" src="'+s+'"><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>Domain-driven design (DDD) is an approach to modelling complex software. It builds the bridge between the domain and the development.</p><h2 id="definition" tabindex="-1">Definition <a class="header-anchor" href="#definition" aria-label="Permalink to &quot;Definition&quot;">​</a></h2><p>Domain-driven design is neither a technology nor a methodology. It offers a structure of practices and terminology for taking design decisions. Simply expressed the design is driven by the domain, meaning that architecture and implementation are strictly guided by the domain. The domain should be the heart of a system. The approach was developed by Eric Evans, who introduced this approach in his book in 2003.</p><h2 id="motivation" tabindex="-1">Motivation <a class="header-anchor" href="#motivation" aria-label="Permalink to &quot;Motivation&quot;">​</a></h2><p>DDD is a suitable approach when building complex software systems.</p><h2 id="results" tabindex="-1">Results <a class="header-anchor" href="#results" aria-label="Permalink to &quot;Results&quot;">​</a></h2><p>DDD makes it easier to realize the domain in the software.</p><h2 id="benefit" tabindex="-1">Benefit <a class="header-anchor" href="#benefit" aria-label="Permalink to &quot;Benefit&quot;">​</a></h2><p>DDD promises to increase the productivity of software projects dealing with complex domains. It also aims at increasing the benefit for the end user.</p><h2 id="procedure" tabindex="-1">Procedure <a class="header-anchor" href="#procedure" aria-label="Permalink to &quot;Procedure&quot;">​</a></h2><p>The premise of DDD is to focus the project on the core domain and domain logic, and to model complex designs. The third premise is to initiate a creative collaboration between technical and domain experts to iteratively get closer and closer to the conceptual core of the problem. DDD always starts in the problem space - only when this is sufficiently understood, it moves on to the solution space. The heart of DDD is the ubiquitous language. This language consists of all the terms that domain experts use when they talk about the domain and is also used in the source code.</p><h2 id="tools" tabindex="-1">Tools <a class="header-anchor" href="#tools" aria-label="Permalink to &quot;Tools&quot;">​</a></h2><p>Whiteboard/flipchart</p><h2 id="hints" tabindex="-1">Hints <a class="header-anchor" href="#hints" aria-label="Permalink to &quot;Hints&quot;">​</a></h2><p>In order to understand and learn how to apply DDD, the book &quot;Learning Domain-Driven Design&quot; by Vlad Khononov (2021, O&#39;Reilly Media, Inc.) provides a practical guide.</p><h2 id="see-also" tabindex="-1">See also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;See also&quot;">​</a></h2><p>Eberhard Wolff (2020): <a href="https://entwickler.de/java/fachlich-sinnvoll-schneiden-001" target="_blank" rel="noreferrer">Fachlich sinnvoll schneiden … - Warum Domain-driven Design?</a>, Entwickler Magazin Spezial Vol. 24: DDD, Adrian Gygax, Martin Kernland (2016): <a href="https://entwickler.de/ddd/einfuhrung-in-die-konzepte-von-domain-driven-design-001" target="_blank" rel="noreferrer">Einführung in die Konzepte von Domain-driven Design</a>, entwickler.de,domaindrivendesign.org (2007) <a href="https://www.dddcommunity.org/learning-ddd/what_is_ddd/" target="_blank" rel="noreferrer">What is Domain-Driven Design?</a></p>',19),g=JSON.parse('{"title":"Domain Driven Design","description":"","frontmatter":{},"headers":[],"relativePath":"structure-and-processes/domain-driven-design.md"}'),h={name:"structure-and-processes/domain-driven-design.md"},D=Object.assign(h,{setup(c){return(m,p)=>(i(),t("div",null,[d,o(a,{subject:"Process/Agile workflow",participants:"The entire agile team",facilitator:"Agile coach / Agile master"}),l]))}});export{g as __pageData,D as default};
